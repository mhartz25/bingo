# #!/usr/bin/env python3
# # -*- coding: utf-8 -*-
# """
# Created on Fri Mar 26 21:32:35 2021

# @author: matthewhartz
# """

# import utils
# import main
# import numpy as np
# #horz test



# #vert text


# #diag test




# data = [
#         [1,16,31,46,61],
#         [2,17,32,47,62],
#         [3,18,33,48,63],
#         [4,19,34,49,64],
#         [5,20,35,50,65]
#         ]
  
# answer = [
#         [True, False, False, False, True], 
#         [False, True, False, True, False],
#         [False, False, True, False, False],
#         [True, False, False, True, True],
#         [True, False, False, False, False] 
#         ]




# nud = [32, 46, 41, 45, 49, 46, 42, 46, 23, 52, 54, 50, 54, 47, 36, 44, 31, 44, 51, 40, 54, 56, 42, 48, 59, 38, 34, 44, 55, 41, 32, 
#         50, 26, 61, 42, 37, 47, 22, 59, 29, 46, 60, 56, 37, 43, 55, 48, 37, 43, 51, 30, 51, 25, 38, 40, 28, 53, 43, 64, 50, 40, 53, 55, 38, 57, 40, 60, 54, 30, 41, 51, 44, 49, 54, 57, 49, 56, 45, 43, 55, 47, 39, 50, 45, 61, 51, 46, 38, 36, 52, 55, 40, 65, 61, 49, 21, 44, 52, 48, 26, 44, 46, 40, 50, 52, 58, 35, 44, 42, 51, 60, 47, 47, 41, 36, 49, 66, 35, 34, 40, 36, 41, 45, 41, 57, 52, 45, 43, 62, 24, 55, 
#         23, 40, 42, 45, 61, 54, 41, 55, 41, 43, 28, 66, 49, 39, 51, 48, 63, 31, 38, 31, 32, 35, 43, 57, 55, 62, 44, 57, 22, 40, 48, 42, 25, 35, 31, 34, 49, 57, 56, 66, 21, 45, 43, 46, 53, 49, 48, 51, 33, 66, 39, 53, 57, 35, 35, 51, 43, 44, 51, 48, 57, 62, 25, 38, 43, 31, 30, 52, 41, 65, 40, 58, 46, 39, 48, 27, 51, 45, 34, 58, 37, 44, 43, 43, 44, 40, 39, 43, 18, 51, 53, 35, 45, 67, 26, 35, 69, 50, 56, 54, 61, 52, 45, 58, 44, 41, 48, 44, 37, 57, 45, 58, 51, 52, 47, 43, 22, 30, 47, 48, 
#         16, 34, 38, 57, 34, 45, 41, 29, 31, 39, 59, 55, 44, 46, 39, 49, 36, 58, 56, 66, 50, 19, 49, 43, 57, 49, 49, 45, 56, 30, 54, 28, 45, 44, 49, 40, 32, 48, 32, 62, 38, 47, 53, 43, 55, 50, 41, 39, 56, 39, 48, 52, 38, 45, 52, 29, 65, 35, 47, 42, 52, 36, 57, 39, 58, 44, 51, 52, 52, 55, 37, 42, 43, 47, 54, 51, 23, 59, 43, 55, 36, 63, 56, 56, 44, 39, 54, 53, 45, 50, 24, 61, 47, 53, 33, 50, 43, 34, 40, 30, 53, 45, 36, 52, 38, 35, 41, 18, 58, 57, 31, 45, 44, 47, 35, 41, 61, 56, 55, 50, 32, 61, 39, 41, 47, 41, 51, 59, 56, 53, 52, 26, 45, 51, 42, 
#         47, 39, 45, 31, 47, 48, 46, 59, 62, 19, 56, 52, 40, 33, 32, 49, 46, 50, 
#         52, 49, 51, 43, 56, 56, 56, 56, 41, 54, 53, 36, 31, 56, 29, 51, 34, 30, 35, 39, 42, 57, 34, 57, 43, 50, 39, 46, 33, 46, 44, 35, 16, 50, 27, 40, 39, 54, 38, 46, 53, 39, 52, 59, 47, 30, 37, 32, 50, 54, 49, 58, 33, 37, 32, 58, 59, 49, 64, 38, 51, 56, 51, 40, 37, 62, 46, 57, 52, 25, 44, 54, 53, 41, 41
#         , 49, 48, 58, 58, 35, 62, 18, 27, 48, 44, 58, 47, 45, 23, 40, 51, 52, 58, 49, 
#         54, 31, 53, 42, 31, 46, 61, 57, 57, 51, 21, 50, 53, 45, 51, 63, 54, 
#         39, 17, 41, 48, 42, 46, 47, 52, 46, 50, 52, 36, 52, 65, 33, 25, 45, 44, 
#         66, 49, 36, 23, 24, 52, 38, 49, 54, 30, 57, 54, 56, 55, 52, 39, 30, 61, 
#         43, 33, 41, 49, 27, 52, 43, 54, 51, 26, 17, 38, 45, 60, 52, 48, 48, 45, 
#         45, 56, 61, 44, 38, 51, 47, 47, 52, 46, 53, 41, 53, 39, 49, 47, 21, 38, 47, 41, 28, 55, 59, 47, 39, 56, 67, 37, 21, 59, 39, 51, 34, 34, 61, 39, 59, 41, 58, 46, 51, 55, 65, 55, 50, 23, 54, 55, 54, 51, 53, 63, 36, 45, 47, 63, 61, 33, 36, 58, 49, 59, 55, 38, 45, 45, 45, 54, 25, 41, 62, 41, 47, 56, 48, 58, 45, 49, 42, 45, 58, 38, 50, 44, 58, 54, 38, 54, 52, 56, 48, 25, 36, 38, 60, 63, 29, 44, 
#         56, 52, 56, 29, 43, 54, 42, 59, 51, 53, 40, 46, 43, 40, 56, 58, 37, 34, 32, 55, 52, 27, 20, 57, 46, 25, 44, 41, 64, 54, 33, 43, 38, 54, 33, 46, 43, 48, 35, 26, 36, 22, 39, 36, 50, 51, 43, 40, 39, 50, 57, 40, 40, 37, 28, 50, 44, 44, 44, 38, 47, 51, 44, 46, 43, 48, 58, 38, 33, 52, 63, 42, 34, 42, 46, 43, 49, 18, 28, 42, 39, 38, 34, 24, 37, 43, 41, 59, 42, 50, 66, 41, 29, 42, 62, 41, 36, 53, 30, 52, 49, 34, 34, 37, 25, 66, 47, 34, 48, 48, 43, 54, 44, 43, 33, 48, 32, 37, 39, 62, 19, 64, 36, 49, 53, 40, 43, 32, 53, 54, 45, 36, 39, 48, 43, 39, 47, 35, 30, 51, 60, 37, 50, 38, 45, 
#         46, 52, 37, 50, 50, 48, 48, 22, 45, 45, 54, 28, 50, 45, 41, 37, 52, 37, 36, 34, 53, 64, 50, 43, 35, 44, 36, 45, 30, 32, 39, 54, 43, 55, 57, 57, 50, 54, 34, 27, 43, 57, 51, 30, 49, 34, 45, 42, 32, 52, 42, 55, 33, 31, 40, 53, 38, 40, 68, 35, 31, 34, 57, 33, 50, 47, 33, 53, 51, 29, 35, 39, 49, 50, 55, 33, 38, 51, 47, 45, 42, 62, 30, 31, 44, 62, 45, 55, 
#         41, 50, 56, 39, 46, 40, 22, 37, 35, 41, 43, 47, 45, 49, 61, 65, 46, 56, 67, 40, 45, 32, 46, 47, 47, 57, 48, 45, 64, 54, 59, 55, 46, 50, 36, 43, 48, 48, 47, 62, 42, 48, 35, 35, 43, 55, 62, 41, 55, 39, 39, 55, 44, 51, 47, 49, 41, 40, 52, 41, 19, 23, 47, 45, 26, 52, 41, 
#         50, 48, 28, 30, 63, 58, 40, 58, 38, 47, 35, 14, 53, 56, 49, 57, 53, 34, 57, 50, 42, 56, 62, 17, 51, 49, 47, 28, 21, 47, 44, 43, 48]
    

# print(np.mean(nud))
# print(np.std(nud))

              
    
# data_2 = [i + 1 for lst in data for i in lst]

# print(data_2)

self = [[False, False, False, False, True],[False, True, False, -1, False],[False, False, True, False, False],[False, True, False, True, False],
[True, False, False, False, True]]

nums = [[1,2,3,4,5],
        [6,7,8,9,10], 
        [11,12,13,14,15],
        [16,17,18,19,20], 
        [21,22,23,24,25]]
                
def diagnoal_check(self):
        check = []
        reverse_check = []
        for i in range(0,5):
                check.append(self[i][i])
                reverse_check.append(self[-i][-i])

        return all(check) or all(reverse_check)


#print(diagnoal_check(self))

for i in range(0,5):   
        print(nums[-i][i-1])     